{"name":"Lincx","tagline":"Erlang on Bare Metal","body":"# LINC - OpenFlow software switch\r\n\r\n## What is LINC?\r\n\r\nLINC is a pure OpenFlow software switch written in Erlang. It's implemented in\r\noperating system's userspace as an Erlang node. Such approach is not the most\r\nefficient one, but it gives a lot of flexibility and allows quick development\r\nand testing of new OpenFlow features.\r\n\r\n### Features\r\n\r\n * Support for [OpenFlow Protocol 1.2][ofp3] and [OpenFlow Protocol 1.3][ofp4],\r\n * OpenFlow Capable Switch - ability to run multiple logical switches,\r\n * Support for [OF-Config 1.1.1][ofc11] management protocol,\r\n * Modular architecture, easily extensible.\r\n\r\n## How to use it?\r\n\r\n### Erlang\r\n\r\nTo use LINC you need to have an Erlang runtime installed on your\r\nmachine. Required version is **R15B+**.\r\n\r\n#### Install from sources\r\n\r\nTo build Erlang from sources first you have to install some required system\r\npackages.\r\n\r\nOn Ubuntu:\r\n\r\n    # apt-get install gcc wget make autoconf openssl libssl0.9.8 libssl-dev libncurses5 libncurses5-dev\r\n\r\nOn RedHat/CentOS:\r\n\r\n    # yum install gcc wget make autoconf openssl openssl-devel ncurses ncurses-devel\r\n\r\nOn other Linux systems you need to install the counterparts of aforementioned packages.\r\n\r\n\r\nWhen your system environment is ready download the sources from [erlang.org][erlang-src]. Unpack, compile and install:\r\n\r\n    % ./configure\r\n    % make\r\n    # make install\r\n\r\n#### Install from binaries\r\n\r\nIf you're lazy you can also use [Erlang binary packages][erlang-bin] created by [Erlang Solutions][esl].\r\n\r\n### LINC\r\n\r\nTo build the switch you need to install the following additional libraries and\r\ntools.\r\n\r\nOn Ubuntu:\r\n\r\n    # apt-get install git-core bridge-utils libpcap0.8 libpcap-dev libcap2-bin uml-utilities\r\n\r\nOn RedHat/CentOS:\r\n\r\n    # yum install git sudo bridge-utils libpcap libpcap-devel libcap tunctl\r\n\r\nNote that on RedHat/CentOS 5.x you need a newer version of libpcap:\r\n\r\n    # yum erase libpcap libpcap-devel\r\n    # yum install flex byacc\r\n    # wget http://www.tcpdump.org/release/libpcap-1.2.1.tar.gz\r\n    # tar xzf libpcap-1.2.1.tar.gz\r\n    # cd libpcap-1.2.1\r\n    # ./configure\r\n    # make && make install\r\n\r\nOn other Linux systems you need to install the counterparts of aforementioned packages.\r\n\r\nWhen your environment is set up you are ready to build and run LINC.\r\n\r\nClone this git repository:\r\n\r\n    % git clone <REPO>\r\n\r\nCompile everything:\r\n\r\n    % make\r\n\r\nAdjust switch configuration by editing the `rel/linc/releases/0.1/sys.config` file which looks like this:\r\n\r\n    {linc,\r\n     [\r\n      {of_config, enabled},\r\n      {capable_switch_ports,\r\n       [\r\n        {port, 1, [{interface, \"eth0\"}]},\r\n        {port, 2, [{interface, \"tap0\"}]}\r\n       ]},\r\n      {logical_switches,\r\n       [\r\n        {switch, 0,\r\n         [\r\n          {backend, linc_us4},\r\n          {controllers,\r\n           [\r\n            {\"Switch0-DefaultController\", \"localhost\", 6633, tcp}\r\n           ]},\r\n          {queues_status, disabled},\r\n          {ports,\r\n           [\r\n            {port, 1, {queues, []}},\r\n            {port, 2, {queues, []}}\r\n           ]}\r\n         ]}\r\n       ]}\r\n     ]}.\r\n\r\nAt the moment you can change the list of controllers and ports used by the\r\nswitch.\r\n\r\nStart LINC switch in `console` mode:\r\n\r\n    % rel/linc/bin/linc console\r\n\r\nFor further instructions on how to use LINC check the\r\n\"[Ping example](https://github.com/FlowForwarding/LINC-Switch/tree/master/docs/example-ping.md)\".\r\n\r\nFor detailed explanation on how to setup simple LINC testbed check the\r\n\"[Testbed setup](https://github.com/FlowForwarding/LINC-Switch/tree/master/docs/testbed-setup.md)\".\r\n\r\n## Development environment\r\nTo facilitate developing LINC application the appropriate environment was prepared. It consists of the following components:\r\n\r\n1. \"[Sync](https://github.com/mentels/sync)\" - scans all the **beam** files and their corresponding source files and reloads or recompiles them respectively if necessary.\r\n2. \"[EDTS](https://github.com/tjarvstrand/edts)\" - Emacs mode that among others provides automatic files compilation, finding function declaration etc. For this to work you have to configure your emacs to use EDTS.\r\n3. Makefile targets - start the development Erlang VM.\r\n\r\nAssuming that you have Emacs and EDTS installed and properly configured, to start developing LINC you have follow these steps:\r\n\r\n1. Clone the repo.\r\n2. Enter the project root dir and issue:\r\n    make dev_prepare\r\n   If you get and error saying \"beam.smp executable not found!\" follow the guidelines and export the BEAMSMP_PATH variable pointing to your `beam.smp` and run the make target againg.\r\n3. By default only the `procket` module is excluded from scanning by Sync. If you want to prevent additional modules from being scanned modify sync configuration in `rel/files/sys.config` file.\r\n3. Next start the development Erlang VM:\r\n    make dev\r\n\r\nNow you can develop the LINC application without restarting the Erlang VM.\r\n\r\n## Support\r\n\r\nIf you have any technical questions, problems or suggestions regarding LINC\r\nplease send them to <linc-dev@flowforwarding.org> mailing list or create an\r\nIssue. Thanks.\r\n\r\n [ovs]: http://openvswitch.org\r\n [ofp1]: https://www.opennetworking.org/images/stories/downloads/specification/openflow-spec-v1.0.0.pdf\r\n [ofp2]: https://www.opennetworking.org/images/stories/downloads/specification/openflow-spec-v1.1.0.pdf \r\n [ofp3]: https://www.opennetworking.org/images/stories/downloads/specification/openflow-spec-v1.2.pdf \r\n [ofp4]: https://www.opennetworking.org/images/stories/downloads/specification/openflow-spec-v1.3.0.pdf \r\n [ofc11]: https://www.opennetworking.org/images/stories/downloads/of-config/of-config-1.1.pdf\r\n [erlang-src]: http://www.erlang.org/download.html\r\n [erlang-bin]: http://www.erlang-solutions.com/section/132/download-erlang-otp\r\n [esl]: http://www.erlang-solutions.com\r\n","google":"UA-48536854-1","note":"Don't delete this file! It's used internally to help with page regeneration."}